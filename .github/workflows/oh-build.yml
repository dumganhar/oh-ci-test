name: <Native> Compile for OpenHarmony

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

jobs:
  compile_oh:
    name: "OpenHarmony"
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Get oh sdk cache directory path
        id: oh-sdk-cache-dir-path
        run: |
          echo "cache dir: "
          echo "dir=$HOME/openharmony" >> $GITHUB_OUTPUT

      - name: Output cache dir
        run: |
          echo "Output cache dir: ${{ steps.oh-sdk-cache-dir-path.outputs.dir }}"

      - name: Cache OH SDK
        id: cache-oh-sdk
        uses: actions/cache@v3
        env:
          cache-name: cache-oh-sdk-2
        with:
          path: ${{ steps.oh-sdk-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}

      - name: Add package.json
        run: |
          echo "{}" > package.json
          echo "{\"name\": \"tests\",\"lockfileVersion\": 3,\"requires\": true,\"packages\": {}}" > package-lock.json
      - uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'npm'
      # - name: Install pnpm
      #   uses: pnpm/action-setup@v2
      #   with:
      #     version: 7

      - if: ${{ steps.cache-oh-sdk.outputs.cache-hit != 'true' }}
        name: No Cache found, install oh sdk
        continue-on-error: false
        run: |
          if [ ! -d "$HOME/openharmony" ]; then
            mkdir -p $HOME/openharmony
            curl -o commandline-tools-linux.zip "https://contentcenter-vali-drcn.dbankcdn.cn/pvt_2/DeveloperAlliance_package_901_9/b1/v3/E6zhv5UFQ2-inIwNJhTN6Q/commandline-tools-linux-2.0.0.2.zip?HW-CC-KV=V1&HW-CC-Date=20230621T074401Z&HW-CC-Expire=315360000&HW-CC-Sign=621224257B02079B1E76C0A56FDF21483400B1E3556213F88DC79BC9BE7D595D"
            unzip commandline-tools-linux.zip -d $HOME/openharmony
            cd $HOME/openharmony
            ls -l
            cd command-line-tools
            echo "=============== PATCHING sdkmanager/bin/sdkmgr file ==============="
            sed -i "s@-Dfile.encoding=UTF-8@-Dfile.encoding=UTF-8 -Duser.country=CN@g" ./sdkmanager/bin/sdkmgr
            cd bin
            ./sdkmgr list
            echo "=============== INSTALL HOS toolchains:9 ==============="
            ./sdkmgr install toolchains:9 --accept-license
            echo "=============== INSTALL OH SDK ets:9 ==============="
            ./sdkmgr install OpenHarmony/ets:9 --accept-license
            echo "=============== INSTALL OH SDK js:9 ==============="
            ./sdkmgr install OpenHarmony/js:9 --accept-license
            echo "=============== INSTALL OH SDK native:9 ==============="
            ./sdkmgr install OpenHarmony/native:9 --accept-license
            echo "=============== INSTALL OH SDK toolchains:9 ==============="
            ./sdkmgr install OpenHarmony/toolchains:9 --accept-license
            echo "=============== INSTALL OH SDK DONE ==============="
            ./sdkmgr list
          fi

      - name: Compile for OpenHarmony
        run: |
          which node
          which npm
          which java
          node -v
          npm -v
          java --version
          echo "=============== list files in oh sdk ($HOME/openharmony) ==============="
          pushd $HOME/openharmony
          ls -l
          popd
          echo "=============== SET NPM OH REGISTRY ==============="
          echo "registry=https://repo.huaweicloud.com/repository/npm/" > ~/.npmrc
          echo "@ohos:registry=https://repo.harmonyos.com/npm/" >> ~/.npmrc
          npm config get @ohos:registry
          echo "=============== UPDATE local.properties ==============="
          echo "nodejs.dir=/usr/bin" >> local.properties
          echo "hwsdk.dir=$HOME/openharmony/hwsdk" >> local.properties
          echo "=============== EXECUTE hvigorw ==============="
          #./hvigorw --mode module -p module=entry@default -p product=default -p debuggable=true assembleHap -d --no-daemon
          ./hvigorw clean assembleHap -d --no-daemon
          echo "=============== EXECUTE hvigorw DONE ==============="

          



